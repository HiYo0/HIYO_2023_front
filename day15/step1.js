/* 


    - 자료형
        0.unfined       : 자료가 없다.
        1. 숫자형   2. 문자열  3. 불
        4. 배열[  ]     : 여러개의 자료를 하나의 자료로 묶음
            - 성질, 상태, 필드 = 현재 데이터의 상태
        5. 함수(){  }   : 코드의 집합
            - 행위
        6. 객체{  }
    함수
        - 코드의 집합을 나타내는 자료형
        - 함수를 쓰는 이유 : 코드를 묶는 역활. , 다시 쓰기위해
        - 용어
            - 함수호출  : 함수사용할때. f(x)
            - 매개변수  : 함수를 호출할때 괄호{  } 내부에 여러가지 *자료를 넣을때

            - 리턴값    : 함수호출해서 최종적으로 나오는 결과 = 반환 return
                - void  : 없다.

        - 종류
            1. 매개변수O리턴O
                function 함수( x , y ){ z = x+y; return z; }
            2. 매개변수O리턴X
                function 함수( x , y ){ z = x+y; }
            3. 매개변수X리턴O
                fucction 함수(  ){ return 3+3; }
            4. 매개변수X리턴X
                function 함수(  ){  };

        - 함수 사용하면 좋은점.
            1. 반복되는 코드를 한번에 정의 하고 필요에 따라 호출해서 반복 작업을 피할수 있다. [ 코드양 줄일수 있다. ]
            2. 긴 프로그램을 기능별로 나눠 여러 함수로 나눠 작성하며 모듈화 [ 조각/쪼개서 단위 ]로 전체 코드의 가독성[ 읽고 관리하기 ] 이 좋음
            3. 기능별(함수별) 로 수정이 가능하므로 유지보수가 쉽다.

        - 1. 익명함수 : 이름이 없는 함수.
            - function(){  }            : 함수에 이름이 없어서 함수호출이 불가능.
            - 익명함수를 변수/상수에 대입하고 .. 그럼 변수/상수 호출시 함수가 실행.
                - const 함수명 = function( ){ }

        - 2. 선언적함수 : 이름이 있는 함수
            - function(){ }             : 함수에 이름이 있는 상태.

*/
alert('ddd');   // JS 개발자가 만들어서... JS사용하는 개발자 전달하는 코드묶음.

// p.197    : *익명함수.

/* -------------------- 함수 선언부 start -------------------- */
const 함수 = function(){
    /* =================== 함수 내부 =================== */
    console.log('함수 내부 코드입니다..1');
    console.log('함수 내부 코드입니다..2');
    console.log('함수 내부 코드입니다..3');
    console.log('');
    /* =================== 함수 내부 =================== */
}
/* -------------------- 함수 선언부 End -------------------- */
함수(); // 함수 호출..
함수(); // 함수 또 호출..
// 함수2(); // 함수2 is not defined [ 오류 ]
console.log( typeof 함수 ); // 자료형 확인 : function
console.log( 함수 );


// p.199 : 선언적 함수.
function 선언함수(){    // function 함수명(  ){  }
    console.log('함수 내부 코드입니다..1');
    console.log('함수 내부 코드입니다..2');
    console.log('함수 내부 코드입니다..3');
    console.log('');
}   // function End

선언함수();
선언함수();

console.log( typeof 선언함수 );
console.log( 선언함수 );

Number(prompt);

// p.201
    // 1. 함수명 : 'f' , 매개변수 : 'x' , 리턴값 : 'x+x'
function f(x){ return x+x };
// 함수[ console.log ]( 호출[f] 호출 )
    // 1. f(3) => 6
    // 2. console.log( 6 );
console.log( f(3) );
    
// - 함수명/기능 : 오늘스페셜메뉴 , 매개변수 : 50,000 , 리턴값 : '랍스터음식';

function 오늘스페셜메뉴( ){
    // 요리하는 로직/코드
    return '랍스터음식';
}

오늘스페셜메뉴(50000);